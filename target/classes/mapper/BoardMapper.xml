<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.board.board.mapper.BoardMapper">

   
   <select id="getBoardList" resultType="Board">
      select @num:=@num+1 AS BOARD_ROW ,b.*, u.USER_NICKNAME as BOARD_WRITER
      from (SELECT @num:=0) AS n, board b
      left outer join userinfo u ON(b.USER_NO = u.USER_NO)
      where b.DELETE_YN = 'N'
      order by BOARD_NO desc, BOARD_ROW desc
      limit #{start}, 10
   </select>
   
   <select id="getListCount" resultType="_int">
      select count(*)
      from board
      where DELETE_YN = 'N'
   </select>
   
   <select id="searchGetListCount" resultType="_int">
   		select count(*)
   		from board b
   		left outer join userinfo u ON(b.USER_NO = u.USER_NO)
   		where b.DELETE_YN = 'N'
   		<if test="searchType == 'title'">
   			AND b.board_title like CONCAT('%', #{keyword}, '%')
   		</if>
   		<if test="searchType == 'content'">
   			AND b.board_contents like CONCAT('%', #{keyword}, '%')
   		</if>
   		<if test="searchType == 'writer'">
   			AND u.USER_NICKNAME like CONCAT('%', #{keyword}, '%')
   		</if>
   </select>
  
   <select id="getSearchBoardList" resultType="Board">
		select 
				@num:=@num+1 AS BOARD_ROW , 
				b.* ,
				u.USER_NICKNAME as BOARD_WRITER
		from 
			(SELECT @num:=0) AS n
			, board b
		left outer join userinfo u ON(b.USER_NO = u.USER_NO)
		where b.DELETE_YN = 'N'
		<if test="searchType == 'title'">
   			AND b.board_title like CONCAT('%', #{keyword}, '%')
   		</if>
   		<if test="searchType == 'content'">
   			AND b.board_contents like CONCAT('%', #{keyword}, '%')
   		</if>
   		<if test="searchType == 'writer'">
   			AND u.USER_NICKNAME like CONCAT('%', #{keyword}, '%')
   		</if>
		order by BOARD_NO desc, BOARD_ROW desc
		limit #{start}, 10
   </select>
   
   <insert id="insertBoard">

      INSERT INTO BOARD
      (
         BOARD_TITLE,
         BOARD_CONTENTS, 
         BOARD_DATE, 
         USER_NO
      )VALUES(
         #{BOARD_TITLE}, 
         #{BOARD_CONTENTS}, 
         now(), 
         #{USER_NO}
      )
       <selectKey resultType="int" keyProperty="BOARD_NO" order="AFTER">
        select last_insert_id()
       </selectKey>
   </insert>
   
   <insert id="nmInsertBoard">
      INSERT INTO BOARD
      (
         BOARD_TITLE,
         BOARD_CONTENTS, 
         BOARD_DATE,
         nmPassword
      )VALUES(
         #{BOARD_TITLE}, 
         #{BOARD_CONTENTS},
         now(),
         #{nmPassword}
      )
   </insert>
   
   <select id="boardSelect" resultType="Board">
      SELECT b.*, u.USER_NICKNAME as BOARD_WRITER
      FROM BOARD b
      left outer join userinfo u ON(b.USER_NO = u.USER_NO)
      WHERE BOARD_NO = #{BOARD_NO}
   </select>
   
   <update id="updateBoard">
      UPDATE
         BOARD
      SET
         BOARD_TITLE = #{BOARD_TITLE}
         , BOARD_CONTENTS = #{BOARD_CONTENTS}
         , updateDate = NOW()
      WHERE 
         BOARD_NO = #{BOARD_NO}
   </update>
   
   <update id="boardCount">
      UPDATE
         BOARD
      SET 
         BOARD_COUNT = BOARD_COUNT + 1
      WHERE 
         BOARD_NO = #{BOARD_NO}
   </update>
   
   <update id="deleteBoard">
      UPDATE 
         BOARD
      SET 
         DELETE_YN = 'Y', DELETE_DATE = NOW()
      WHERE 
         BOARD_NO = #{BOARD_NO}
   </update>
   
    <update id="nmUpdateBoard">
      UPDATE
         BOARD
      SET
         BOARD_TITLE = #{BOARD_TITLE}
         , BOARD_CONTENTS = #{BOARD_CONTENTS}
         , nmPassword = #{nmPassword}
         , updateDate = NOW()
      WHERE 
         BOARD_NO = #{BOARD_NO}
   </update>
   
</mapper>